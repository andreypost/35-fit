{"version":3,"sources":["webpack://35fit/./src/routes.ts","webpack://35fit/./src/AppRouter.tsx","webpack://35fit/./src/utils/routes.constants.ts"],"names":["Main","lazy","Training","Pricing","Schedule","Team","Club","Faq","Reserve","Flower","Chat","publicRoutes","path","MAIN_ROUTE","Component","TRAIN_ROUTE","PRICE_ROUTE","SCHEDULE_ROUTE","TEAM_ROUTE","CLUB_ROUTE","FAQ_ROUTE","RESERVE_ROUTE","privatRoutes","FLOWER_ROUTE","CHAT_ROUTE","auth","useContext","FirebaseAuthContext","useAuthState","user","basename","map","component","exact","to"],"mappings":"uMACMA,GAAOC,WAAK,kBAAM,kEAClBC,GAAWD,WAAK,kBAAM,iEACtBE,GAAUF,WAAK,kBAAM,kEACrBG,GAAYH,WAAK,kBAAO,kEACxBI,GAAQJ,WAAK,kBAAO,kEACpBK,GAAQL,WAAK,kBAAO,kEACpBM,GAAON,WAAK,kBAAO,kEACnBO,GAAUP,WAAK,kBAAM,kEACrBQ,GAASR,WAAK,kBAAM,yDACpBS,GAAOT,WAAK,kBAAM,kEAIXU,EAAe,CACxB,CACIC,KAAMC,KACNC,UAAWd,GAEf,CACIY,KAAMG,KACND,UAAWZ,GAEf,CACIU,KAAMI,IACNF,UAAWX,GAEf,CACIS,KAAMK,KACNH,UAAWV,GAEf,CACIQ,KAAMM,KACNJ,UAAWT,GAEf,CACIO,KAAMO,KACNL,UAAWR,GAEf,CACIM,KAAMQ,KACNN,UAAWP,GAEf,CACIK,KAAMS,KACNP,UAAWN,IAINc,EAAe,CACxB,CACIV,KAAMW,IACNT,UAAWL,GAEf,CACIG,KAAMY,KACNV,UAAWJ,I,UCtBnB,QAlB4B,WACxB,IAAQe,GAASC,gBAAWC,KAApBF,KACR,GAAeG,QAAaH,GAArBI,GAAP,eACA,OACI,SAAC,KAAD,CAAYC,SAAS,IAArB,UAEI,UAAC,KAAD,WACKnB,EAAaoB,KAAI,gBAAGnB,EAAH,EAAGA,KAAME,EAAT,EAASA,UAAT,OACd,SAAC,KAAD,CAAkBF,KAAMA,EAAMoB,UAAWlB,EAAWmB,OAAO,GAA/CrB,MAEfiB,EAAOP,EAAaS,KAAI,gBAAGnB,EAAH,EAAGA,KAAME,EAAT,EAASA,UAAT,OAAyB,SAAC,KAAD,CAAkBF,KAAMA,EAAMoB,UAAWlB,EAAWmB,OAAO,GAA/CrB,MAA2D,MACzH,SAAC,KAAD,CAAUsB,GAAIrB,c,6HC3BvB,IAAMA,EAAa,IACbE,EAAc,SACdC,EAAc,SACdC,EAAiB,YACjBC,EAAa,QACbC,EAAa,QACbC,EAAY,OACZC,EAAgB,WAChBE,EAAe,UACfC,EAAa","file":"882.bundle.js","sourcesContent":["import { lazy } from 'react'\r\nconst Main = lazy(() => import('views/Main'))\r\nconst Training = lazy(() => import('views/Train'))\r\nconst Pricing = lazy(() => import('views/Price'))\r\nconst Schedule =  lazy(() =>  import('views/Schedule'))\r\nconst Team =  lazy(() =>  import('views/Team'))\r\nconst Club =  lazy(() =>  import('views/Club'))\r\nconst Faq =  lazy(() =>  import('views/Faq'))\r\nconst Reserve = lazy(() => import('views/Reserve'))\r\nconst Flower = lazy(() => import('views/Flower'))\r\nconst Chat = lazy(() => import('views/Chat'))\r\n\r\nimport { MAIN_ROUTE, TRAIN_ROUTE, PRICE_ROUTE, SCHEDULE_ROUTE, TEAM_ROUTE, CLUB_ROUTE, FAQ_ROUTE, RESERVE_ROUTE, FLOWER_ROUTE, CHAT_ROUTE } from 'utils/routes.constants';\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: MAIN_ROUTE,\r\n        Component: Main\r\n    },\r\n    {\r\n        path: TRAIN_ROUTE,\r\n        Component: Training\r\n    },\r\n    {\r\n        path: PRICE_ROUTE,\r\n        Component: Pricing\r\n    },\r\n    {\r\n        path: SCHEDULE_ROUTE,\r\n        Component: Schedule\r\n    },\r\n    {\r\n        path: TEAM_ROUTE,\r\n        Component: Team\r\n    },\r\n    {\r\n        path: CLUB_ROUTE,\r\n        Component: Club\r\n    },\r\n    {\r\n        path: FAQ_ROUTE,\r\n        Component: Faq\r\n    },\r\n    {\r\n        path: RESERVE_ROUTE,\r\n        Component: Reserve\r\n    },\r\n]\r\n\r\nexport const privatRoutes = [\r\n    {\r\n        path: FLOWER_ROUTE,\r\n        Component: Flower\r\n    },\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat\r\n    }\r\n]","import React, { useContext } from 'react'\r\nimport {\r\n    HashRouter,\r\n    // BrowserRouter,\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom'\r\n// import { createBrowserHistory } from 'history'\r\nimport { FirebaseAuthContext } from '.'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport { privatRoutes, publicRoutes } from './routes'\r\nimport { MAIN_ROUTE } from 'utils/routes.constants'\r\n// const history = createBrowserHistory()\r\n// console.log(history.location.pathname)\r\n\r\nconst AppRouter: React.FC = (): any => {\r\n    const { auth } = useContext(FirebaseAuthContext)\r\n    const [user] = useAuthState(auth)\r\n    return (\r\n        <HashRouter basename='/'>\r\n            {/* <BrowserRouter basename=\"/\"> */}\r\n            <Switch>\r\n                {publicRoutes.map(({ path, Component }) =>\r\n                    <Route key={path} path={path} component={Component} exact={true} />\r\n                )}\r\n                {user ? privatRoutes.map(({ path, Component }) => <Route key={path} path={path} component={Component} exact={true} />) : null}\r\n                <Redirect to={MAIN_ROUTE} />\r\n            </Switch>\r\n            {/* </BrowserRouter> */}\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","export const MAIN_ROUTE = '/'\r\nexport const TRAIN_ROUTE = '/train'\r\nexport const PRICE_ROUTE = '/price'\r\nexport const SCHEDULE_ROUTE = '/schedule'\r\nexport const TEAM_ROUTE = '/team'\r\nexport const CLUB_ROUTE = '/club'\r\nexport const FAQ_ROUTE = '/faq'\r\nexport const RESERVE_ROUTE = '/reserve'\r\nexport const FLOWER_ROUTE = '/flower'\r\nexport const CHAT_ROUTE = '/chat'\r\n"],"sourceRoot":""}