openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppHello_getHello
      parameters: []
      responses:
        "200":
          description: ""
      summary: Hello from Nest.js!
      tags:
        - AppHello
  /user/create-new-user:
    post:
      operationId: UserController_createNewUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "201":
          description: ""
      summary: create-new-user
      tags: &a1
        - User
  /user/login:
    post:
      operationId: UserController_loginUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserDto"
      responses:
        "201":
          description: ""
      summary: login
      tags: *a1
  /user/validate:
    get:
      operationId: UserController_validateUserByAuthToken
      parameters: []
      responses:
        "200":
          description: ""
      summary: validate
      tags: *a1
  /user/users:
    get:
      operationId: UserController_getAllUsers
      parameters: []
      responses:
        "200":
          description: ""
      summary: users
      tags: *a1
  /user/logout:
    post:
      operationId: UserController_logoutUser
      parameters: []
      responses:
        "201":
          description: ""
      summary: logout
      tags: *a1
  /user/search:
    get:
      operationId: UserController_searchUsers
      parameters: []
      responses:
        "200":
          description: ""
      summary: search
      tags: *a1
  /user/{id}/privileges:
    patch:
      operationId: UserController_updateUserPrivileges
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RolesPrivilegesDto"
      responses:
        "200":
          description: ""
      summary: :id/privileges
      tags: *a1
  /user/sql:
    get:
      operationId: UserController_sqlQueryVulnerability
      parameters: []
      responses:
        "200":
          description: ""
      summary: sql
      tags: *a1
  /price/check-set:
    get:
      operationId: PriceController_checkSetPriceByName
      parameters: []
      responses:
        "200":
          description: ""
      summary: check-set
      tags: &a2
        - Price
  /price/create:
    post:
      operationId: PriceController_createProductPrice
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePriceDto"
      responses:
        "201":
          description: ""
      summary: create
      tags: *a2
  /scooter/check:
    post:
      operationId: ScooterController_checkExistingScooter
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScooterDto"
      responses:
        "201":
          description: ""
      summary: check
      tags: &a3
        - Scooter
  /scooter/create:
    post:
      operationId: ScooterController_createScooter
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScooterDto"
      responses:
        "201":
          description: ""
      summary: create
      tags: *a3
  /accessory/check:
    post:
      operationId: AccessoryController_checkExistingAccessory
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccessoryDto"
      responses:
        "201":
          description: ""
      summary: check
      tags: &a4
        - Accessory
  /accessory/create:
    post:
      operationId: AccessoryController_createAccessory
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccessoryDto"
      responses:
        "201":
          description: ""
      summary: create
      tags: *a4
  /order/create:
    post:
      operationId: OrderController_createUserOrder
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderDto"
      responses:
        "201":
          description: ""
      summary: create
      tags: &a5
        - Order
  /order/orders/{type}:
    get:
      operationId: OrderController_getUserOrders
      parameters:
        - name: type
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      summary: orders/:type
      tags: *a5
  /file/json/read:
    get:
      operationId: JsonController_loadUserCollection
      parameters: []
      responses:
        "200":
          description: ""
      summary: file/json/read
      tags: &a6
        - Json
  /file/json/write:
    post:
      operationId: JsonController_addNewDetailsUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserJsonDto"
      responses:
        "201":
          description: ""
      summary: file/json/write
      tags: *a6
  /file/json/count-by-country:
    get:
      operationId: JsonController_getUsersCountByCountry
      parameters: []
      responses:
        "200":
          description: ""
      summary: file/json/count-by-country
      tags: *a6
  /file/json/average-earnings-by-country:
    get:
      operationId: JsonController_getAverageEarningsByCountry
      parameters: []
      responses:
        "200":
          description: ""
      summary: file/json/average-earnings-by-country
      tags: *a6
  /file/json/users/{id}:
    get:
      operationId: JsonController_findUserById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
      summary: file/json/users/:id
      tags: *a6
  /file/csv/read:
    get:
      operationId: CsvController_csvReadWriteFile
      parameters: []
      responses:
        "200":
          description: ""
      summary: file/csv/read
      tags:
        - Csv
  /file/dir/structure:
    get:
      operationId: DirController_structureDir
      parameters: []
      responses:
        "200":
          description: ""
      summary: file/dir/structure
      tags:
        - Dir
info:
  title: 35-fit nest-api
  description: The NEST-API description for the 35-fit project
  version: "1.0"
  contact: {}
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: nest-api
    description: ""
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties: {}
    LoginUserDto:
      type: object
      properties: {}
    RolesPrivilegesDto:
      type: object
      properties: {}
    CreatePriceDto:
      type: object
      properties: {}
    CreateScooterDto:
      type: object
      properties: {}
    CreateAccessoryDto:
      type: object
      properties: {}
    CreateOrderDto:
      type: object
      properties: {}
    CreateUserJsonDto:
      type: object
      properties: {}
security:
  - bearer: []
