name: "CI: Install, Lint (with Prettier), Build, and Conditional Firebase Deploy"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy:
        description: "Manually trigger deploy to Firebase (set true to activate)"
        required: false
        default: "false"
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: ./functions/package-lock.json

      # Install dependencies for functions
      - name: Install dependencies for functions
        run: |
          cd functions
          npm install--frozen-lockfile

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: ./headless/package-lock.json

      # Install dependencies for front-end
      - name: Install Front-end Dependencies
        working-directory: ./headless
        run: npm install --frozen-lockfile

      # Lint front-end
      - name: Lint Front-end
        working-directory: ./headless
        run: npm run lint # Runs script in package.json, combined with prettier-check in .eslintrc.cjs as 'plugin:prettier/recommended'

      # Build front-end
      - name: Build Front-end
        working-directory: ./headless
        env:
          REACT_APP_API_URL: "http://127.0.0.1:5001/fit-35/us-central1/api"
        run: npm run build # Runs script in package.json

      # # Build functions # triggers the error, require a new pay plan
      #   - name: Build functions
      #   run: |
      #     cd functions
      #     npm run build

      # Determine if deployment should be triggered
      - name: Determine Deployment Trigger
        id: deployment_trigger
        run: |
          if [[ "${{ github.event.inputs.deploy }}" == "true" ]]; then
            echo "DEPLOY_TRIGGERED=true" >> $GITHUB_ENV
          elif git log -1 --pretty=%B | grep -q '\[deploy\]'; then
            echo "DEPLOY_TRIGGERED=true" >> $GITHUB_ENV
          else
            echo "DEPLOY_TRIGGERED=false" >> $GITHUB_ENV
          fi

      # Deploy to Firebase if triggered
      - name: Deploy to Firebase
        if: env.DEPLOY_TRIGGERED == 'true'
        working-directory: ./headless
        run: npm run firebase-deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: ./api/package-lock.json

      # Set up environment variables for Railway
      - name: Set up Railway Environment Variables
        if: env.DEPLOY_TRIGGERED == 'true'
        run: |
          echo "PGHOST=${{ secrets.PGHOST }}" >> $GITHUB_ENV
          echo "PGPORT=${{ secrets.PGPORT }}" >> $GITHUB_ENV
          echo "PGUSER=${{ secrets.PGUSER }}" >> $GITHUB_ENV
          echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> $GITHUB_ENV
          echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> $GITHUB_ENV
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      # Install dependencies for back-end
      - name: Install Back-end Dependencies
        if: env.DEPLOY_TRIGGERED == 'true'
        working-directory: ./api
        run: npm install --frozen-lockfile

      # Run backend tests (uncomment if you have tests)
      # - name: Run Backend Tests
      #   if: env.DEPLOY_TRIGGERED == 'true'
      #   working-directory: ./api
      #   run: npm test

      # Deploy backend without a build step
      # - name: Deploy Backend
      #   if: env.DEPLOY_TRIGGERED == 'true'
      #   working-directory: ./api
      #   run: |
      #     npm start
