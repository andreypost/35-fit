name: "CI: Install, Lint (with Prettier), Build, and Conditional Firebase Deploy"

on:
  push:
    branches:
      - main
    paths:
      - "api/**"
      - "functions/**"
      - "headless/**"
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy:
        description: "Manually trigger deploy to Firebase (set true to activate)"
        required: false
        default: "false"

jobs:
  api:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[run-api]') || github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: ./api/package-lock.json

      - name: Set up Railway Environment Variables
        run: |
          echo "PGHOST=${{ secrets.PGHOST }}" >> $GITHUB_ENV
          echo "PGPORT=${{ secrets.PGPORT }}" >> $GITHUB_ENV
          echo "PGUSER=${{ secrets.PGUSER }}" >> $GITHUB_ENV
          echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> $GITHUB_ENV
          echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> $GITHUB_ENV
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Install API Dependencies
        working-directory: ./api
        run: npm install --frozen-lockfile

  functions:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[run-functions]') || github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: ./functions/package-lock.json

      - name: Install dependencies for functions
        run: |
          cd functions
          npm install --frozen-lockfile

      - name: Deploy functions to Firebase
        if: contains(github.event.head_commit.message, '[deploy-functions]')
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only functions

      - name: Serve functions
        if: contains(github.event.head_commit.message, '[deploy-functions]')
        run: |
          cd functions
          npm run serve

  headless:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[run-headless]') || github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: ./headless/package-lock.json

      - name: Install Front-end Dependencies
        working-directory: ./headless
        run: npm install --frozen-lockfile

      - name: Lint Front-end
        working-directory: ./headless
        run: npm run lint

      - name: Set up Variables && Build Front-end
        working-directory: ./headless
        env:
          API_URL: ${{ secrets.API_URL }}
        run: npm run build

      # - name: Determine Deployment Trigger
      #   id: deployment_trigger
      #   run: |
      #     if [[ "${{ github.event.inputs.deploy }}" == "true" ]]; then
      #       echo "DEPLOY_TRIGGERED=true" >> $GITHUB_ENV
      #     elif git log -1 --pretty=%B | grep -q '\[deploy\]'; then
      #       echo "DEPLOY_TRIGGERED=true" >> $GITHUB_ENV
      #     else
      #       echo "DEPLOY_TRIGGERED=false" >> $GITHUB_ENV
      #     fi

      - name: Deploy Front-end to Firebase
        if: contains(github.event.head_commit.message, '[deploy-headless]')
        # if: env.DEPLOY_TRIGGERED == 'true'
        working-directory: ./headless
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: npm run firebase-deploy
