services:
  database:
    image: postgres:16.8 # Uses PostgreSQL 16.8
    container_name: n-fit
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
    ports:
      - ${DOCKERPORT}:${PGPORT}
    volumes:
      - n-fit-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${PGDATABASE}", "-U", "${PGUSER}"]
      interval: 5s
      retries: 5

  backend:
    build:
      context: ./nest-api
      dockerfile: Dockerfile
    container_name: fit-nest-api
    restart: always
    depends_on:
      database:
        condition: service_healthy # Ensure database is ready before backend starts
    env_file:
      - ./.env
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./nest-api:/app:delegated
      # - ./nest-api:/app
      - /app/node_modules # Prevents overwriting node_modules
      - ./jsonData:/app/jsonData # Mount jsonData folder correctly
    command: ["npm", "run", "start:docker"]

  frontend:
    build:
      context: ./headless
      dockerfile: Dockerfile
    container_name: fit-headless
    restart: always
    depends_on:
      - backend
    env_file:
      - ./.env
    ports:
      - ${HEADLESS_PORT}:${HEADLESS_PORT}
    volumes:
      - ./headless:/app
      - /app/node_modules # Prevents overwriting node_modules
      # - /app/dist # Prevents dist from being overwritten
    command: ["npm", "run", "start:docker"]
    # command: ["npx", "serve", "-s", "dist", "-l", "8080"] # Explicitly force serving dist/

volumes:
  n-fit-data: # Persistent PostgreSQL storage
