services:
  database:
    image: postgres:15
    container_name: fitdb
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      # - PGPORT=${PGPORT}
      # - JWT_KEY=${JWT_KEY}
      # - HEADLESS_URL=${HEADLESS_URL}
    ports:
      - ${DOCKERHOST}:${PGPORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "fitdb"]
      interval: 5s
      retries: 5

  backend:
    build:
      context: ./nest-api
      dockerfile: Dockerfile
    container_name: fit-nest-api
    restart: always
    depends_on:
      - database
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    volumes:
      - ./nest-api:/app
      - /app/node_modules # Prevents overwriting node_modules
    command: ["npm", "run", "start:dev"]

  frontend:
    build:
      context: ./headless
      dockerfile: Dockerfile
    container_name: fit-headless
    restart: always
    depends_on:
      - backend
    env_file:
      - ./.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${FIREBASE_APP_ID}
      - API_URL=${API_URL}
    ports:
      - "8080:8080"
    volumes:
      - ./headless:/app
      - /app/dist # Prevents dist from being overwritten
    command: ["npx", "serve", "-s", "dist", "-l", "8080"] # Explicitly force serving dist/

volumes:
  pgdata:
